service: economist-news-quiz

plugins:
  - serverless-offline

custom:
  bucket: 'wine-bucket-serverless-dev-2'
  tableName: 'wine-table-${self:provider.stage}'
  dynamodb:
    start:
      migrate: true

provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  profile: serverless
  region: us-east-1
  environment:
    STAGE: ${self:provider.stage}
    BUCKET: ${self:custom.bucket}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": ["WineDynamoDBTable", "Arn" ] }
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
      Resource: "arn:aws:dynamodb:${self:provider.region}:676718483588:table/wine-table-dev/index/*"


functions:
  app:
    handler: server.handler
    events:
      - http: 'ANY {proxy+}'
  graphql:
    handler: graphql.graphqlHandler
    events:
      - http:
          path: 'graphql'
          method: any
          cors: true

resources:
  Resources:
    WineDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: productId
            AttributeType: S
          -
            AttributeName: tag
            AttributeType: S
          -
            AttributeName: category_id
            AttributeType: S
        KeySchema:
          -
            AttributeName: productId
            KeyType: HASH
        GlobalSecondaryIndexes:
          -
            IndexName: categoryIndex
            KeySchema:
              -
                AttributeName: category_id
                KeyType: HASH
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 2
              WriteCapacityUnits: 2
          -
            IndexName: tagIndex
            KeySchema:
              -
                AttributeName: tag
                KeyType: HASH
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 2
              WriteCapacityUnits: 2
        ProvisionedThroughput:
          ReadCapacityUnits: 4
          WriteCapacityUnits: 4
        TableName: ${self:custom.tableName}